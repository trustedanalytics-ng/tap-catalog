swagger: '2.0'
info:
  title: Catalog API
  version: "0.0.1"
# the domain of the service
host: catalog.example.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
consumes:
   - application/json
paths:
  /services:
    get:
      summary: Services List
      responses:
        200:
          description: An array of services
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
    post:
      summary: Create Service
      parameters:
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddService"
      responses:
        201:
          description: Created service
          schema:
              $ref: '#/definitions/Service'
  /services/{serviceId}:
    get:
      summary: Service details
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Service object
          schema:
              $ref: '#/definitions/Service'
    put:
      summary: Update Service
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/UpdateService"
      responses:
        200:
          description: Service Updated
          schema:
              $ref: '#/definitions/Service'
    patch:
      summary: Update Service
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/PatchService"
      responses:
        200:
          description: Service Updated
          schema:
              $ref: '#/definitions/Service'
    delete:
      summary: Delete Service
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        204:
         description: Service deleted
  /services/{serviceId}/plans:
    get:
      summary: Service Plan List
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of plans
          schema:
            type: array
            items:
              $ref: '#/definitions/Plan'
    post:
      summary: Create Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddPlan"
      responses:
        201:
          description: Created service
          schema:
              $ref: '#/definitions/Plan'
  /services/{serviceId}/plans/{planId}:
    get:
      summary: Service Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Plan object
          schema:
              $ref: '#/definitions/Plan'
    put:
      summary: Update Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/UpdatePlan"
      responses:
        200:
          description: Plan object
          schema:
              $ref: '#/definitions/Plan'
    patch:
      summary: Update Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/PatchPlan"
      responses:
        200:
          description: Plan object
          schema:
              $ref: '#/definitions/Plan'
    delete:
      summary: Delete Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Plan deleted
  /services/{serviceId}/instances:
    get:
      summary: Service Instance List
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
    post:
      summary: Create Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddInstance"
      responses:
        201:
          description: Created instance
          schema:
              $ref: '#/definitions/Instance'
  /services/{serviceId}/instances/{instanceId}:
    get:
      summary: Service Instance object
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
              $ref: '#/definitions/Instance'
    put:
      summary: Update Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/UpdateInstance"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
    patch:
      summary: Update Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/PatchInstance"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
    delete:
      summary: Delete Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance deleted
  /applications:
    get:
      summary: List Applications
      responses:
        200:
          description: Instance object
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
    post:
      summary: Add Application
      parameters:
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddApplication"
      responses:
        201:
          description: Application created
          schema:
              $ref: '#/definitions/Application'
  /applications/{applicationId}:
    get:
      summary: Get Application object
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
              $ref: '#/definitions/Application'
    put:
      summary: Update Application
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/UpdateApplication"
      responses:
        200:
          description: Application updated
          schema:
              $ref: '#/definitions/Application'
    patch:
      summary: Update Application
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/PatchApplication"
      responses:
        200:
          description: Application updated
          schema:
              $ref: '#/definitions/Application'
    delete:
      summary: Delete Application
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Application deleted
  /applications/{applicationId}/instances:
    get:
      summary: List Application Instances
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance list
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
    post:
      summary: Add Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddInstance"
      responses:
        201:
          description: Instance created
          schema:
              $ref: '#/definitions/Instance'
  /applications/{applicationId}/instances/{instanceId}:
    get:
      summary: Get Application Instance object
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
              $ref: '#/definitions/Instance'
    put:
      summary: Update Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/UpdateInstance"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
    patch:
      summary: Update Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/PatchInstance"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
    delete:
      summary: Delete Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance deleted
  /instances:
    get:
      summary: List all instances
      responses:
        200:
          description: Instance list
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
  /instances/{instanceId}:
    get:
      summary: Get instance object
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
            $ref: '#/definitions/Instance'
  /instances/{instanceId}/bindings:
    post:
      summary: Add another instance to current instance dependency list
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Binding'
      responses:
        200:
          description: List of instance dependencies
          schema:
            type: array
            items:
              type: string
  /instances/{instanceId}/bindings/{bindingId}:
    delete:
      summary: Delete another instanse from instance dependency list
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: bindingId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance dependency deleted
  /instances/{instanceId}/meta:
    post:
      summary: Add meta parameter for instance
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Meta"
      responses:
        201:
          description: Meta parameter
          schema:
              $ref: '#/definitions/Meta'
  /instances/{instanceId}/meta/{key}:
    delete:
      summary: Delete instance meta parameter
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: key
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance parameter deleted
  /templates:
    get:
      summary: List templates
      responses:
        200:
          description: List of templates
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
    post:
      summary: Add template
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        201:
          description: Template added
          schema:
            $ref: '#/definitions/Template'
  /templates/{templateId}:
    delete:
      summary: Delete template
      parameters:
        - name: templateId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Template deleted
    put:
      summary: Update template
      parameters:
        - name: templateId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTemplate'
      responses:
        200:
          description: Template state updated
definitions:
  Service:
    type: object
    required:
      - id
      - name
      - description
      - templateId
      - bindable
      - state
      - plans
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["deploying", "ready", "offline"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/AddPlan'
  AddService:
    type: object
    required:
      - name
      - description
      - templateId
      - bindable
      - state
    properties:
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["deploying", "ready", "offline"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/AddPlan'
  UpdateService:
    type: object
    required:
      - name
      - description
      - templateId
      - bindable
      - state
    properties:
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["deploying", "ready", "offline"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/AddPlan'
  PatchService:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["deploying", "ready", "offline"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/AddPlan'
  Plan:
    type: object
    required:
      - id
      - name
      - description
      - cost
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  AddPlan:
    type: object
    required:
      - name
      - description
      - cost
    properties:
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  UpdatePlan:
    type: object
    required:
      - name
      - description
      - cost
    properties:
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  PatchPlan:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  Instance:
    type: object
    required:
      - id
      - type
      - classId
      - state
    properties:
      id:
        type: string
      type:
        type: string
      classId:
        type: string
      state:
        type: string
        enum: ["requested", "deploying", "stopped", "running", "to_be_destroyed", "destroying", "unavailable"]
      meta:
        type: array
        items:
          $ref: '#/definitions/Meta'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  AddInstance:
    type: object
    required:
      - type
      - classId
      - state
    properties:
      type:
        type: string
      classId:
        type: string
      state:
        type: string
        enum: ["requested", "deploying", "stopped", "running", "to_be_destroyed", "destroying", "unavailable"]
      meta:
        type: array
        items:
           $ref: '#/definitions/Meta'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  UpdateInstance:
    type: object
    required:
      - type
      - classId
      - state
    properties:
      type:
        type: string
      classId:
        type: string
      state:
        type: string
        enum: ["requested", "deploying", "stopped", "running", "to_be_destroyed", "destroying", "unavailable"]
      meta:
        type: array
        items:
          $ref: '#/definitions/Meta'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  PatchInstance:
    type: object
    properties:
      type:
        type: string
      classId:
        type: string
      state:
        type: string
        enum: ["requested", "deploying", "stopped", "running", "to_be_destroyed", "destroying", "unavailable"]
      meta:
        type: array
        items:
          $ref: '#/definitions/Meta'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  Application:
    type: object
    required:
      - type
      - image
      - replication
      - templateId
      - state
      - id
    properties:
      id:
        type: string
      templateId:
        type: string
      image:
        type: string
      replication:
        type: integer
      type:
        type: string
        enum: ["java", "go", "nodejs"]
      state:
        type: string
        enum: ["requested", "building", "ready"]
  AddApplication:
    type: object
    required:
      - type
      - image
      - replication
      - templateId
      - state
    properties:
      templateId:
        type: string
      image:
        type: string
      replication:
        type: integer
      type:
        type: string
        enum: ["java", "go", "nodejs"]
      state:
        type: string
        enum: ["requested", "building", "ready"]
  UpdateApplication:
    type: object
    required:
      - type
      - image
      - replication
      - templateId
      - state
    properties:
      templateId:
        type: string
      image:
        type: string
      replication:
        type: integer
      type:
        type: string
        enum: ["java", "go", "nodejs"]
      state:
        type: string
        enum: ["requested", "building", "ready"]
  PatchApplication:
    type: object
    properties:
      templateId:
        type: string
      image:
        type: string
      replication:
        type: integer
      type:
        type: string
        enum: ["java", "go", "nodejs"]
      state:
        type: string
        enum: ["requested", "building", "ready"]
  Meta:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
  Template:
    type: object
    required:
      - templateId
      - state
    properties:
      templateId:
        type: string
      state:
        type: string
  UpdateTemplate:
    type: object
    required:
      - state
    properties:
      state:
        type: string
  Binding:
    type: object
    required:
      - id
    properties:
      id:
        type: string
