swagger: '2.0'
info:
  version: "1"
  title: tap-catalog
  description: The Catalog acts as the central registry and coordination point for the entire TAP NG instance.  It provides an integrated, logical, view of the platform offerings including their deployment status, state and dependencies.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /healthz:
    get:
      summary: Get health status for catalog
      responses:
        200:
          description: OK
        500:
          description: Unexpected error
  /api/v1/latestIndex:
    get:
      responses:
        200:
          description: Latest etcd index value
          schema:
            type: array
            items:
              $ref: '#/definitions/Index'
        500:
          description: unexpected error
  /api/v1/stable-state:
    get:
      responses:
        200:
          description: response telling if all catalog instances are in stable state
          schema:
              $ref: "#/definitions/StateStability"
        500:
          description: unexpected error
  /api/v1/services:
    get:
      summary: Services List
      responses:
        200:
          description: An array of services
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
        500:
          description: unexpected error
    post:
      summary: Create Service
      parameters:
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddService"
      responses:
        201:
          description: Created service
          schema:
            $ref: '#/definitions/Service'
        400:
          description: Bad request. Provided wrong body.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/services/{serviceId}:
    get:
      summary: Service details
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Service object
          schema:
              $ref: '#/definitions/Service'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Service
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Service Updated
          schema:
              $ref: '#/definitions/Service'
        400:
          description: provided wrong patch
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Service
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Service deleted
        403:
          description: Service cannot be deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/services/{serviceId}/plans:
    get:
      summary: Service Plan List
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of plans
          schema:
            type: array
            items:
              $ref: '#/definitions/Plan'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    post:
      summary: Create Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddPlan"
      responses:
        201:
          description: Created service
          schema:
              $ref: '#/definitions/Plan'
        400:
          description: bad body or provided id field
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/services/{serviceId}/plans/{planId}:
    get:
      summary: Service Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Plan object
          schema:
              $ref: '#/definitions/Plan'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Plan object
          schema:
              $ref: '#/definitions/Plan'
        400:
          description: bad patch defined
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Plan
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: planId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Plan deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/services/instances:
    get:
      summary: Services Instances List
      responses:
        200:
          description: An array of services instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        500:
          description: unexpected response
  /api/v1/services/{serviceId}/instances:
    get:
      summary: Service Instances List
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: An array of instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected response
    post:
      summary: Create Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddInstance"
      responses:
        201:
          description: Created instance
          schema:
              $ref: '#/definitions/Instance'
        400:
          description: bad body or id provided
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/services/{serviceId}/instances/{instanceId}:
    get:
      summary: Service Instance object
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
              $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
        400:
          description: bad patch
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Service Instance
      parameters:
        - name: serviceId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/applications:
    get:
      summary: List Applications
      responses:
        200:
          description: Application object
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        500:
          description: unexpected error
    post:
      summary: Add Application
      parameters:
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddApplication"
      responses:
        201:
          description: Application created
          schema:
              $ref: '#/definitions/Application'
        400:
          description: bad body or id provided
        500:
          description: unexpected error
  /api/v1/applications/{applicationId}:
    get:
      summary: Get Application object
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Application object
          schema:
              $ref: '#/definitions/Application'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Application
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Application updated
          schema:
              $ref: '#/definitions/Application'
        400:
          description: bad patch
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Application
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Application deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/applications/instances:
    get:
      summary: List Applications Instances
      responses:
        200:
          description: Applications instances list
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        500:
          description: unexpected error
  /api/v1/applications/{applicationId}/instances:
    get:
      summary: List Application Instances
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance list
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    post:
      summary: Add Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddInstance"
      responses:
        201:
          description: Instance created
          schema:
              $ref: '#/definitions/Instance'
        400:
          description: bad body or id present
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/applications/{applicationId}/instances/{instanceId}:
    get:
      summary: Get Application Instance object
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
              $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Instance updated
          schema:
              $ref: '#/definitions/Instance'
        400:
          description: bad patch defined
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Application Instance
      parameters:
        - name: applicationId
          in: path
          required: true
          type: string
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/instances:
    get:
      summary: List all instances
      responses:
        200:
          description: Instance list
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        500:
          description: unexpected error
  /api/v1/instances/nextState:
    get:
      summary: Long poll for next isntance state change
      parameters:
        - name: afterIndex
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Next Instance state change
          schema:
            $ref: '#/definitions/StateChange'
        400:
          description: incorrect afterIndex provided
        500:
          description: unexpected error
  /api/v1/instances/{instanceId}:
    get:
      summary: Get instance object
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance object
          schema:
            $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update instance object
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Instance object
          schema:
            $ref: '#/definitions/Instance'
        400:
          description: bad patch
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete instance object
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Instance deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/instances/{instanceId}/nextState:
    get:
      summary: Long poll for next Instance state change
      parameters:
        - name: afterIndex
          in: query
          required: true
          type: integer
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Next Instance state change
          schema:
            $ref: '#/definitions/StateChange'
        400:
          description: incorrect afterIndex provided
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/instances/{instanceId}/bindings:
    get:
      summary: Get bound instances
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Instance objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/templates:
    get:
      summary: List templates
      responses:
        200:
          description: List of templates
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
        500:
          description: unexpected error
    post:
      summary: Add template
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTemplate'
      responses:
        201:
          description: Template added
          schema:
            $ref: '#/definitions/Template'
        400:
          description: wrong body or id present
        500:
          description: unexpected error
  /api/v1/templates/{templateId}:
    get:
      summary: Get specific template
      parameters:
        - name: templateId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Template object
          schema:
            $ref: '#/definitions/Template'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update specific template
      parameters:
        - name: templateId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Patch"
      responses:
        200:
          description: Template updated
          schema:
            $ref: '#/definitions/Template'
        400:
          description: wrong patch body
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete template
      parameters:
        - name: templateId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Template deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/images:
    get:
      summary: List images
      responses:
        200:
          description: List of images
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        500:
          description: unexpected error
    post:
      summary: Add image
      parameters:
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/AddImage"
      responses:
        201:
          description: Image created
          schema:
            $ref: '#/definitions/Image'
        400:
          description: bad body or id provided
        500:
          description: unexpected error
  /api/v1/images/nextState:
    get:
      summary: Long poll for next image state change
      parameters:
        - name: afterIndex
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Next Image state change
          schema:
            $ref: '#/definitions/StateChange'
        400:
          description: incorrect afterIndex provided
        500:
          description: unexpected error
  /api/v1/images/{imageId}:
    get:
      summary: Get image by ID
      parameters:
        - name: imageId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Image object
          schema:
              $ref: '#/definitions/Image'
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    patch:
      summary: Update Image
      parameters:
        - name: imageId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
              $ref: "#/definitions/Patch"
      responses:
        200:
          description: Image updated
          schema:
              $ref: '#/definitions/Image'
        400:
          description: bad patch defined
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
    delete:
      summary: Delete Image
      parameters:
        - name: imageId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Image deleted
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
  /api/v1/images/{imageId}/nextState:
    get:
      summary: Long poll for next image state change
      parameters:
        - name: afterIndex
          in: query
          required: true
          type: integer
        - name: imageId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Next Image state change
          schema:
            $ref: '#/definitions/StateChange'
        400:
          description: incorrect afterIndex provided
        404:
          description: Not exist. Provided not existing id.
          schema:
            type: string
        500:
          description: unexpected error
definitions:
  Image:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum: ["JAVA","GO","NODEJS"]
      state:
        type: string
        enum: ["PENDING","BUILDING","ERROR","READY"]
      auditTrail:
        $ref: '#/definitions/AuditTrail'
  AddImage:
    type: object
    required:
      - type
      - state
    properties:
      id:
        type: string
      type:
        type: string
        enum: ["JAVA","GO","NODEJS"]
      state:
        type: string
        enum: ["PENDING","BUILDING","ERROR","READY"]
  Patch:
    type: object
    required:
      - op
      - field
      - value
    properties:
      op:
        type: string
        enum: ["Add","Update","Delete"]
      field:
        type: string
      value:
        type: object
      prevValue:
        type: object
      username:
        type: string
  Service:
    type: object
    required:
      - id
      - name
      - description
      - templateId
      - bindable
      - state
      - plans
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["DEPLOYING", "READY", "OFFLINE"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/Plan'
  AddService:
    type: object
    required:
      - name
      - description
      - templateId
      - bindable
      - state
    properties:
      name:
        type: string
      description:
        type: string
      templateId:
        type: string
      bindable:
        type: boolean
      state:
        type: string
        enum: ["DEPLOYING", "READY", "OFFLINE"]
      plans:
        type:
          array
        items:
          $ref: '#/definitions/AddPlan'
  Plan:
    type: object
    required:
      - id
      - name
      - description
      - cost
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  AddPlan:
    type: object
    required:
      - name
      - description
      - cost
    properties:
      name:
        type: string
      description:
        type: string
      cost:
        type: string
  Instance:
    type: object
    required:
      - id
      - type
      - classId
      - state
    properties:
      id:
        type: string
      type:
        type: string
        enum: ["APPLICATION","SERVICE","SERVICE_BROKER"]
      classId:
        type: string
      state:
        type: string
        enum: ["REQUESTED","DEPLOYING","FAILURE","STOPPED","START_REQ","STARTING","RUNNING","STOP_REQ","STOPPING","DESTROY_REQ","DESTROYING","UNAVAILABLE"]
      metadata:
        type: array
        items:
          $ref: '#/definitions/Metadata'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  AddInstance:
    type: object
    required:
      - type
      - classId
      - state
    properties:
      type:
        type: string
        enum: ["APPLICATION","SERVICE","SERVICE_BROKER"]
      classId:
        type: string
      state:
        type: string
        enum: ["REQUESTED","DEPLOYING","FAILURE","STOPPED","START_REQ","STARTING","RUNNING","STOP_REQ","STOPPING","DESTROY_REQ","DESTROYING","UNAVAILABLE"]
      metadata:
        type: array
        items:
          $ref: '#/definitions/Metadata'
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'
  Application:
    type: object
    required:
      - id
      - name
      - description
      - imageId
      - replication
      - templateId
      - instanceDependencies
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      imageId:
        type: string
      replication:
        type: integer
      templateId:
        type: string
      instanceDependencies:
        type: array
        items:
          $ref: '#/definitions/InstanceDependency'
      metadata:
          $ref: '#/definitions/Metadata'
      auditTrail:
        $ref: '#/definitions/AuditTrail'
  InstanceDependency:
    type: object
    properties:
      id:
        type: string
  AddApplication:
    type: object
    required:
      - imageId
      - replication
      - templateId
    properties:
      templateId:
        type: string
      imageId:
        type: string
      replication:
        type: integer
  Metadata:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
  Template:
    type: object
    required:
      - templateId
      - state
    properties:
      templateId:
        type: string
      state:
        type: string
        enum: ["IN_PROGRESS","READY","UNAVAILABLE"]
      auditTrail:
        $ref: '#/definitions/AuditTrail'
  AddTemplate:
    type: object
    properties:
      state:
        type: string
        enum: ["IN_PROGRESS","READY","UNAVAILABLE"]
  Binding:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      data:
        type: object
  Index:
    type: object
    properties:
      latest:
        type: integer
  StateChange:
    type: object
    required:
      - id
      - state
      - index
    properties:
      id:
        type: string
      state:
        type: string
      index:
        type: integer
  AuditTrail:
    type: object
    properties:
      createdOn:
        type: integer
        format: int64
      createdBy:
        type: string
      lastUpdatedOn:
        type: integer
        format: int64
      lastUpdateBy:
        type: string
  StateStability:
    type: object
    properties:
      stable:
        type: boolean
      message:
        type: string
